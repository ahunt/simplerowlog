simple rowLog TODO file.
--------------_CURRENT:

-- implement a front end statistic checker.

-- Member Statistics: use SQL summing to save processing power.

-- Consider: printing last outing(s) of a user, in addition to that of a boat.

------------------ [HIGH PRIORITY] ---------------------------------------------
-- Set Log level to 4 for release.

-- FIx the popup / Enter button in the outing dialog.

-- Implement differentiation of members with the same name.

-- Finish the db: implement deletion of items, rearrange order as necessary.
(Done: Boat, Member) (TODO: Outing, Group)

-- Statistics: rower with most km, comparison, etc.



------------------ [MEDIUM PRIORITY] -------------------------------------------
-- Command line options for the Launcher.

-- Admin error log for minor messages, e.g. MemberInfo.getName etc.

-- Update the error system, in the gui do the error catching and create an
    appropriate user friendly warning. Log all error at database level though.
    
-- Cache and cache checking in db, and in things like OutingDialog to check for
    last update.
    
-- Documentation: incorporate into packaging.

-- Auto backup tool for db and settings.

-- Add change listeners in all relevant dialogs, linked to the apply buttons of said dialogs.

------------------ [LOW PRIORITY] ----------------------------------------------
-- Build in some sort of system for hard compiling the default language files,
    so that srl can run without them if necessary/damaged/missing.
    -- Language files system for when files aren't found. Also clean up locations.
   (Add the default language files to the jar?)

-- Tooltips for info in the admin dialog.

-- Change listeners in config panels where necessary, and then change the apply button.

-- ErrorHandler for all the program, with a command line version implemented.

-- Tell the admin / person logging in if they have failed an attempt, by displaying
    a red text at the top of the dialog, similarly to kde unlock dialogs.
    
-- Security log.

-- Groups Colour.

-- Outingdialog: capability to directly add new members (with probability of name
    being a real name.).
    
-- Central localisation manager and interface for updateLocalisation(); Any
localisable classes register so that they are updated. Selector on main screen.

-- AboutDialog: tabbed pane for devs.

-- Date selection: add a pausable thread for the date selector, so that we only
update once the user has stopped changing the date.

-- Move the log config files.

-- Length of names in database: document, check, etc.

-- Update all file locations to get from config.

-- Create localisation gui tool.

-- AdminAuthenticationDialog: update waiting time for next attempts, and format
        the time in hours/minutes/seconds.
        
-- Tooltips

-- Boats: use the type in the name if there are multiple boats, and have shared
    key over the two columns. Check when making users and boats whether a
        similar one exists.
        
-- Active LAF changing on request.

-- equals method for all info classes.

-- Admin dialog: check whether a certain admin/boat can be deleted both from the
    edit dialog and the main dialog part.

-- Refactor modify outing from long time to Date time.

-- Sort out the layouting in the Edit/Modify Outing Dialogs, to make the
    grouping logical, and align the delete button with the rest of the components.
    
-- Selectable columns OutingManagementPanel.

-- Database.createDefaultData() : add some sort of file based verification that
   the user setting up the system has root data, e.g. a random string in a text
   file -- probably best to have the admin put a string in a file during install.
   Mention this in the install instructions.
   
-- Filter boats by type.

-- EditAdminPermissionsDialog: add text wrapping.
--------------------------------------------------------------------------------
Code cleaning and documentation:
--------------------------------
DONE:
org.ahunt.simpleRowLog.admin.BoatManagementPanel
org.ahunt.simpleRowLog.admin.MemberManagementPanel      
